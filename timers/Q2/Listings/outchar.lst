


ARM Macro Assembler    Page 1 


    1 00000000         ; OutChar.s
    2 00000000         ; Runs on TM4C123
    3 00000000         
    4 00000000         ; Sends ASCII character placed in R5
    5 00000000         ; out through UART0
    6 00000000         
    7 00000000         ; Baud = 9600, 8-bit, No Parity
    8 00000000         ; 1 Stop bit, No flow control
    9 00000000         
   10 00000000         
   11 00000000         ; GPIO Registers *****************
   12 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   13 00000000         ; GPIO base address   = 0x40004000
   14 00000000 4000451C 
                       PORTA_DEN
                               EQU              0x4000451C  ; Digital Enable
   15 00000000 4000452C 
                       PORTA_PCTL
                               EQU              0x4000452C  ; Alternate functio
                                                            n select
   16 00000000 40004420 
                       PORTA_AFSEL
                               EQU              0x40004420  ; Enable Alt functi
                                                            ons
   17 00000000 40004528 
                       PORTA_AMSEL
                               EQU              0x40004528  ; Enable analog
   18 00000000 40004500 
                       PORTA_DR2R
                               EQU              0x40004500  ; Drive current sel
                                                            ect
   19 00000000         
   20 00000000         ; UART Registers *****************
   21 00000000 400FE618 
                       RCGCUART
                               EQU              0x400FE618  ; UART clock regist
                                                            er
   22 00000000         
   23 00000000 4000C000 
                       UART0_DR
                               EQU              0x4000C000  ; UART0 data / base
                                                             address
   24 00000000 4000C030 
                       UART0_CTL
                               EQU              0x4000C030  ; UART0 control reg
                                                            ister
   25 00000000 4000C024 
                       UART0_IBRD
                               EQU              0x4000C024  ; Baud rate divisor
                                                             Integer part
   26 00000000 4000C028 
                       UART0_FBRD
                               EQU              0x4000C028  ; Baud rate divisor
                                                             Fractional part
   27 00000000 4000C02C 
                       UART0_LCRH



ARM Macro Assembler    Page 2 


                               EQU              0x4000C02C  ; UART serial param
                                                            eters
   28 00000000 4000CFC8 
                       UART0_CC
                               EQU              0x4000CFC8  ; UART clock config
                                                            
   29 00000000 4000C018 
                       UART0_FR
                               EQU              0x4000C018  ; UART status
   30 00000000         
   31 00000000 400FE070 
                       SYSCTL_RCC2_R
                               EQU              0x400FE070  ; PLL control
   32 00000000 00000040 
                       SYSCTL_RIS_PLLLRIS
                               EQU              0x00000040
   33 00000000         
   34 00000000         
   35 00000000                 AREA             |.text|, READONLY, CODE, ALIGN=
2
   36 00000000         
   37 00000000                 THUMB
   38 00000000         
   39 00000000         ;  EXTERN Delay
   40 00000000         
   41 00000000         ;  EXPORT OutCharInit
   42 00000000                 EXPORT           OutChar     ; make availavle to
                                                             other programs
   43 00000000         
   44 00000000         ;OutCharInit
   45 00000000         OutChar
   46 00000000 B41F            PUSH             {R0-R4}     ; store registers
   47 00000002         
   48 00000002         ; Enable UART clock
   49 00000002 4929            LDR              R1, =RCGCUART
   50 00000004 6808            LDR              R0, [R1]
   51 00000006 F040 0001       ORR              R0, R0, #0x01 ; set bit 0 to en
                                                            able UART0 clock
   52 0000000A 6008            STR              R0, [R1]
   53 0000000C BF00            NOP                          ; Let clock stabili
                                                            ze
   54 0000000E BF00            NOP
   55 00000010 BF00            NOP
   56 00000012         
   57 00000012         ; Setup GPIO
   58 00000012         ; Enable GPIO clock to use debug USB as com port (PA0, P
                       A1)
   59 00000012 4926            LDR              R1, =RCGCGPIO
   60 00000014 6808            LDR              R0, [R1]
   61 00000016 F040 0001       ORR              R0, R0, #0x01 ; set bit 0 to en
                                                            able port A clock
   62 0000001A 6008            STR              R0, [R1]
   63 0000001C BF00            NOP                          ; Let clock stabili
                                                            ze
   64 0000001E BF00            NOP
   65 00000020 BF00            NOP
   66 00000022         
   67 00000022         ; Make PA0, PA1 digital
   68 00000022 4923            LDR              R1, =PORTA_DEN



ARM Macro Assembler    Page 3 


   69 00000024 6808            LDR              R0, [R1]
   70 00000026 F040 0003       ORR              R0, R0, #0x03 ; set bits 1,0 to
                                                             enable alt functio
                                                            ns on PA0, PA1
   71 0000002A 6008            STR              R0, [R1]
   72 0000002C         
   73 0000002C         ; Disable analog on PA0, PA1
   74 0000002C 4921            LDR              R1, =PORTA_AMSEL
   75 0000002E 6808            LDR              R0, [R1]
   76 00000030 F020 0003       BIC              R0, R0, #0x03 ; clear bits 1,0 
                                                            to disable analog o
                                                            n PA0, PA1
   77 00000034 6008            STR              R0, [R1]
   78 00000036         
   79 00000036         ; Enable alternate functions selected
   80 00000036 4920            LDR              R1, =PORTA_AFSEL
   81 00000038 6808            LDR              R0, [R1]
   82 0000003A F040 0003       ORR              R0, R0, #0x03 ; set bits 1,0 to
                                                             enable alt functio
                                                            ns on PA0, PA1
   83 0000003E 6008            STR              R0, [R1]
   84 00000040         
   85 00000040         ; Select alternate function to be used (UART on PA0, PA1
                       )
   86 00000040 491E            LDR              R1, =PORTA_PCTL
   87 00000042 6808            LDR              R0, [R1]
   88 00000044 F040 0011       ORR              R0, R0, #0x11 ; set bits 4,0 to
                                                             select UART Rx, Tx
                                                            
   89 00000048 6008            STR              R0, [R1]
   90 0000004A         
   91 0000004A         ; Setup UART
   92 0000004A         ; Disable UART while setting up
   93 0000004A 491D            LDR              R1, =UART0_CTL
   94 0000004C 6808            LDR              R0, [R1]
   95 0000004E F020 0001       BIC              R0, R0, #0x01 ; Clear bit 0 to 
                                                            disable UART0 wjile
                                                            
   96 00000052 6008            STR              R0, [R1]    ; setting up
   97 00000054         
   98 00000054         ; Set baud rate to 9600. Divisor = 16MHz/(16*9600)= 104.
                       16666
   99 00000054         ; Set integer part to 104
  100 00000054 491B            LDR              R1, =UART0_IBRD
  101 00000056 F04F 0068       MOV              R0, #104    ;
  102 0000005A 6008            STR              R0, [R1]
  103 0000005C         
  104 0000005C         ; Set fractional part
  105 0000005C         ; 0.16666*64+0.5 = 11.16666 => Integer = 11
  106 0000005C 491A            LDR              R1, =UART0_FBRD
  107 0000005E F04F 000B       MOV              R0, #11
  108 00000062 6008            STR              R0, [R1]
  109 00000064         
  110 00000064         ; Set serial parameters
  111 00000064 4919            LDR              R1, =UART0_LCRH
  112 00000066 F04F 0070       MOV              R0, #0x70   ; No stick parity, 
                                                            8bit, FIFO enabled,
                                                             
  113 0000006A 6008            STR              R0, [R1]    ; One stop bit, Dis



ARM Macro Assembler    Page 4 


                                                            able parity, Normal
                                                             use
  114 0000006C         
  115 0000006C         ;; Enable UART, TX, RX
  116 0000006C         ;LDR  R1, =UART0_CTL
  117 0000006C         ;LDR  R0, [R1]
  118 0000006C         ;MOV  R2, #0x00000301    ; Set bits 9,8,0
  119 0000006C         ;ORR  R0, R0, R2
  120 0000006C         ;STR  R0, [R1]
  121 0000006C         
  122 0000006C         ;POP  {R0-R4}      ; restore registers
  123 0000006C         
  124 0000006C         ;BX  LR
  125 0000006C         
  126 0000006C         ;OutChar
  127 0000006C         
  128 0000006C         ;PUSH  {R0-R4}     ; store registers
  129 0000006C         
  130 0000006C         ; Enable UART, TX, Disable RX
  131 0000006C 4914            LDR              R1, =UART0_CTL
  132 0000006E F240 1201       MOV              R2, #0x00000101 ; Set bits 8,0
  133 00000072 600A            STR              R2, [R1]
  134 00000074         
  135 00000074         
  136 00000074         ; Disable PLL
  137 00000074 4916            LDR              R1,=SYSCTL_RCC2_R
  138 00000076 6808            LDR              R0,[R1]
  139 00000078 B401            PUSH             {R0}        ; store current sta
                                                            te
  140 0000007A F440 5000       ORR              R0,R0,#0x00002000 
                                                            ; Power-Down PLL 2
  141 0000007E 6008            STR              R0,[R1]
  142 00000080         
  143 00000080         
  144 00000080         
  145 00000080         
  146 00000080         ; MOV  R5, #0x01     ; reset delay count
  147 00000080         ; BL  Delay      ; delay conversions
  148 00000080         
  149 00000080         
  150 00000080         ; load flag register location
  151 00000080 4914            LDR              R1, =UART0_FR
  152 00000082         
  153 00000082         waitR
  154 00000082         ; check if UART is ready (buffer is empty)
  155 00000082         ; load UART status register address
  156 00000082 6808            LDR              R0, [R1]
  157 00000084 F010 0020       ANDS             R0,R0,#0x20 ; check if TXFF = 1
                                                            
  158 00000088 D1FB            BNE              waitR       ; If so, UART is fu
                                                            ll, so wait / check
                                                             again
  159 0000008A         
  160 0000008A         ; load R4 with UART data address
  161 0000008A 4C13            LDR              R4, =UART0_DR
  162 0000008C 6025            STR              R5,[R4]     ; Put character in 
                                                            UART data register 
                                                            
  163 0000008E         



ARM Macro Assembler    Page 5 


  164 0000008E         waitD
  165 0000008E         ; check if UART is done transmitting
  166 0000008E 6808            LDR              R0, [R1]
  167 00000090 F010 0008       ANDS             R0,R0,#0x08 ; check if BUSY = 1
                                                            
  168 00000094 D1FB            BNE              waitD       ; If so, UART is bu
                                                            sy, so wait / check
                                                             again
  169 00000096         
  170 00000096         ; Disable UART, TX, Disable RX
  171 00000096 490A            LDR              R1, =UART0_CTL
  172 00000098 F04F 0200       MOV              R2, #0x00000000 
                                                            ; clear bits 8,0
  173 0000009C 600A            STR              R2, [R1]
  174 0000009E         
  175 0000009E         ; Restore PLL
  176 0000009E 490C            LDR              R1,=SYSCTL_RCC2_R
  177 000000A0 BC01            POP              {R0}        ; restore state
  178 000000A2 6008            STR              R0,[R1]
  179 000000A4         
  180 000000A4         
  181 000000A4         
  182 000000A4         
  183 000000A4 BC1F            POP              {R0-R4}     ; restore registers
                                                            
  184 000000A6 4770            BX               LR          ; Return to caller
  185 000000A8         
  186 000000A8         
  187 000000A8                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  188 000000A8                 END                          ; end of file
              400FE618 
              400FE608 
              4000451C 
              40004528 
              40004420 
              4000452C 
              4000C030 
              4000C024 
              4000C028 
              4000C02C 
              400FE070 
              4000C018 
              4000C000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\outchar.d -o.\objects\outchar.o -I.\RTE\_Target_1 -IC
:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\
CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 5
26" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\outchar.lst OutChar.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 35 in file OutChar.s
   Uses
      None
Comment: .text unused
OutChar 00000000

Symbol: OutChar
   Definitions
      At line 45 in file OutChar.s
   Uses
      At line 42 in file OutChar.s
Comment: OutChar used once
waitD 0000008E

Symbol: waitD
   Definitions
      At line 164 in file OutChar.s
   Uses
      At line 168 in file OutChar.s
Comment: waitD used once
waitR 00000082

Symbol: waitR
   Definitions
      At line 153 in file OutChar.s
   Uses
      At line 158 in file OutChar.s
Comment: waitR used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PORTA_AFSEL 40004420

Symbol: PORTA_AFSEL
   Definitions
      At line 16 in file OutChar.s
   Uses
      At line 80 in file OutChar.s
Comment: PORTA_AFSEL used once
PORTA_AMSEL 40004528

Symbol: PORTA_AMSEL
   Definitions
      At line 17 in file OutChar.s
   Uses
      At line 74 in file OutChar.s
Comment: PORTA_AMSEL used once
PORTA_DEN 4000451C

Symbol: PORTA_DEN
   Definitions
      At line 14 in file OutChar.s
   Uses
      At line 68 in file OutChar.s
Comment: PORTA_DEN used once
PORTA_DR2R 40004500

Symbol: PORTA_DR2R
   Definitions
      At line 18 in file OutChar.s
   Uses
      None
Comment: PORTA_DR2R unused
PORTA_PCTL 4000452C

Symbol: PORTA_PCTL
   Definitions
      At line 15 in file OutChar.s
   Uses
      At line 86 in file OutChar.s
Comment: PORTA_PCTL used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 12 in file OutChar.s
   Uses
      At line 59 in file OutChar.s
Comment: RCGCGPIO used once
RCGCUART 400FE618

Symbol: RCGCUART
   Definitions
      At line 21 in file OutChar.s
   Uses
      At line 49 in file OutChar.s
Comment: RCGCUART used once
SYSCTL_RCC2_R 400FE070

Symbol: SYSCTL_RCC2_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 31 in file OutChar.s
   Uses
      At line 137 in file OutChar.s
      At line 176 in file OutChar.s

SYSCTL_RIS_PLLLRIS 00000040

Symbol: SYSCTL_RIS_PLLLRIS
   Definitions
      At line 32 in file OutChar.s
   Uses
      None
Comment: SYSCTL_RIS_PLLLRIS unused
UART0_CC 4000CFC8

Symbol: UART0_CC
   Definitions
      At line 28 in file OutChar.s
   Uses
      None
Comment: UART0_CC unused
UART0_CTL 4000C030

Symbol: UART0_CTL
   Definitions
      At line 24 in file OutChar.s
   Uses
      At line 93 in file OutChar.s
      At line 131 in file OutChar.s
      At line 171 in file OutChar.s

UART0_DR 4000C000

Symbol: UART0_DR
   Definitions
      At line 23 in file OutChar.s
   Uses
      At line 161 in file OutChar.s
Comment: UART0_DR used once
UART0_FBRD 4000C028

Symbol: UART0_FBRD
   Definitions
      At line 26 in file OutChar.s
   Uses
      At line 106 in file OutChar.s
Comment: UART0_FBRD used once
UART0_FR 4000C018

Symbol: UART0_FR
   Definitions
      At line 29 in file OutChar.s
   Uses
      At line 151 in file OutChar.s
Comment: UART0_FR used once
UART0_IBRD 4000C024

Symbol: UART0_IBRD



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 25 in file OutChar.s
   Uses
      At line 100 in file OutChar.s
Comment: UART0_IBRD used once
UART0_LCRH 4000C02C

Symbol: UART0_LCRH
   Definitions
      At line 27 in file OutChar.s
   Uses
      At line 111 in file OutChar.s
Comment: UART0_LCRH used once
16 symbols
356 symbols in table
